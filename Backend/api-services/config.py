## External imports
import os
from dotenv import load_dotenv

# ======================== CONFIG ========================

load_dotenv()

## Cassandra Database
CASSANDRA_NODES = [os.getenv('CASSANDRA_HOST')] # We may have a list of nodes
CASSANDRA_PORT = os.getenv('CASSANDRA_PORT')
# CASSANDRA_USERNAME = os.getenv('CASSANDRA_USERNAME')
# CASSANDRA_PASSWORD = os.getenv('CASSANDRA_PASSWORD')
CASSANDRA_KEYSPACES = [os.getenv('AUTH_KEYSPACE'), os.getenv('H3_INDEX_KEYSPACE'), os.getenv('APP_DATA_KEYSPACE')]

## Keyspaces 
AUTH_KEYSPACE = os.getenv('AUTH_KEYSPACE')
APP_DATA_KEYSPACE = os.getenv('APP_DATA_KEYSPACE')
H3_INDEX_KEYSPACE = os.getenv("H3_INDEX_KEYSPACE")

## Minio Database
MINIO_ROOT_USER = os.getenv('MINIO_ROOT_USER')
MINIO_ROOT_PASSWORD = os.getenv('MINIO_ROOT_PASSWORD')
MINIO_HOST = os.getenv('MINIO_HOST')
MINIO_PORT = int(os.getenv('MINIO_PORT'))
MINIO_BUCKETS = [os.getenv('PHOTOS_BUCKET_NAME'), os.getenv('VIDEOS_BUCKET_NAME')]


## Bucket
PHOTOS_BUCKET_NAME = os.getenv('PHOTOS_BUCKET_NAME')
VIDEOS_BUCKET_NAME = os.getenv('VIDEOS_BUCKET_NAME')

## Environment
MAX_OCCURRENCES_SCROLL_MOBILE_LIST_PAGE = os.getenv('MAX_OCCURRENCES_SCROLL_MOBILE_LIST_PAGE')
MAX_OCCURRENCES_SCROLL_WEBSITE_LIST_PAGE = os.getenv('MAX_OCCURRENCES_SCROLL_WEBSITE_LIST_PAGE')
MAX_OCCURRENCES_LOADING_WEBSITE_MAP_PAGE = os.getenv('MAX_OCCURRENCES_LOADING_WEBSITE_MAP_PAGE')
AVAILABLE_STATUS = os.getenv('AVAILABLE_STATUS')

## Auth
SECRET_KEY = os.getenv("SECRET_KEY")
ALGORITHM = os.getenv("ALGORITHM")
ACCESS_TOKEN_EXPIRES_MINUTES = int(os.getenv("ACCESS_TOKEN_EXPIRES_MINUTES"))

## Api Configuration
ENDPOINTS_PREFIX = os.getenv("ENDPOINTS_PREFIX")
API_PORT = int(os.getenv("API_PORT"))
INCIDENT_TTL = int(os.getenv("INCIDENT_TTL")) # in seconds
HTTPS_ENABLED = os.getenv("HTTPS_ENABLED").lower() == "true"

## H3
H3_INCIDENT_RESOLUTION = int(os.getenv("H3_INCIDENT_RESOLUTION"))
H3_ORGANIZATION_MINIMUM_RESOLUTION = int(os.getenv("H3_ORGANIZATION_MINIMUM_RESOLUTION"))
H3_ORGANIZATION_MAXIMUM_RESOLUTION = int(os.getenv("H3_ORGANIZATION_MAXIMUM_RESOLUTION"))

## LLM
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
DESCRIPTION_CATEGORY_SEVERITY_SYS_INSTRUCTION = os.getenv("DESCRIPTION_CATEGORY_SEVERITY_SYS_INSTRUCTION")
LLM_BOOTSTRAP_SERVERS = os.getenv("LLM_BOOTSTRAP_SERVERS")
DESCRIPTION_CATEGORY_SEVERITY_TOPIC = os.getenv("DESCRIPTION_CATEGORY_SEVERITY_TOPIC")
JOB_CLUSTERING_TOPIC = os.getenv("JOB_CLUSTERING_TOPIC")
MERGE_DESCRIPTIONS_TOPIC = os.getenv("MERGE_DESCRIPTIONS_TOPIC")
CHECK_INCIDENT_RESOLVED_TOPIC = os.getenv("CHECK_INCIDENT_RESOLVED_TOPIC")
CHECK_INCIDENT_RESOLVED_FROM_VIDEO_SYS_INSTRUCTION = os.getenv("CHECK_INCIDENT_RESOLVED_FROM_VIDEO_SYS_INSTRUCTION")

## Auth
ACCESS_TOKEN_EXPIRES_MINUTES = int(os.getenv("ACCESS_TOKEN_EXPIRES_MINUTES"))
REFRESH_TOKEN_EXPIRES_DAYS = int(os.getenv("REFRESH_TOKEN_EXPIRES_DAYS"))

# Sendgrid 
SENDGRID_API_KEY= os.getenv("SENDGRID_API_KEY")
FIX_AI_EMAIL= os.getenv("FIX_AI_EMAIL")

## Redis
REDIS_HOST = os.getenv("REDIS_HOST")
REDIS_PORT = int(os.getenv("REDIS_PORT"))
REDIS_TTL_SEC_NEARBY_INCIDENTS = int(os.getenv("REDIS_TTL_SEC_NEARBY_INCIDENTS"))
